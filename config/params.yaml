#  Name the experiment. This name will be the name of the report
experiment_name: "param_guide"

#Save directory of results
results_directory: "/home/riotu/ros2_ws2/src/ROSNavBench/results"

#  Add the absolute path of the world
world_path: "/home/riotu/ros2_ws2/src/ROSNavBench/simulations/worlds/scenario_world.world"

#  Add the absolute path of the map
map_path: "/home/riotu/ros2_ws2/src/ROSNavBench/simulations/maps/map.yaml"

#  Add the absolute path of the map
map_png_path: "/home/riotu/ros2_ws2/src/ROSNavBench/simulations/maps/map.pgm"

#  Add gazebo model path, if multiple path, please spereate them by a :
models_path: "/opt/ros/humble/share/turtlebot3_gazebo/models:/home/riotu/ros2_ws2/src/ROSNavBench/simulations/models"

#  Choose a type of global local planners to be tested
planner_type: ["NavFn", "smac_planner"]
#  Choose one of the following controllers, by adding its name to the controller type list
#  Note that these are the avaible controllers for the provided example
#  DWB
#  RPP
#  RPP_RSC
#  DWB_RSC
controller_type: ["RPP", "DWB", "MPPI"] #name of behaviour tree

#  This option is intended for testing the same controller and planner combination several times
#  Min value is one
instances_num: 1

#  Add the absolute path of the robot navigation configuration
nav_config: "/home/riotu/perform_ws/src/ROSNavBench/example/turtlebot3/nav2_config/waffle.yaml"

#  Add the directory of the behaviour tree
behaviour_tree_directory: "/home/riotu/perform_ws/src/ROSNavBench/example/turtlebot3/behavior_trees"

#  Add the absolute path of the urdf and model files inside single qoutes ''
urdf_file: "/opt/ros/humble/share/turtlebot3_description/urdf/turtlebot3_waffle.urdf"

#  If the robot is spawned by only urdf, then set the model_file to 'None'
model_file: "/opt/ros/humble/share/turtlebot3_gazebo/models/turtlebot3_waffle/model.sdf"
#Citeria for performace analysis includes: "Time" ,"CPU", "Memory", "Path Length" , "Safety"
criteria: ["Time", "Path Length", "CPU", "Memory", "Safety"]

#Wieght for each criteria as a number from 1 to 9
#Set None if the wieght to be set automatcally giving that the importance to the eariler criteria in the matrix
weights: "None"

#  Provide the pose in a decimal form
spawn_pose_x: 4.0
spawn_pose_y: -3.0
spawn_pose_yaw: -3.13 #radians

#  Specify either to send one goal, specific trajectory, or several waypoints
#  square, circle, several_waypoints, one_goal
trajectory_type: "circle"
#  One goal parameter
goal_pose_x: 4.0
goal_pose_y: -3.0
goal_pose_yaw: -3.13 #radians
#  Circule parameter, note that the place of spawn will be the center of the circle
radius: 1.1
#  Square parameter
side_length: 3.0
#  Specify way points in this formate [[x0,y0,yaw0_radians], [x1,y1,yaw1_radians], ...]
waypoints: [[-1.3, 2.3, -3.13], [6.0, 2.0, -3.13], [-4.0, 4.0, -3.13]]
