#  Name the experiment. This name will be the name of the report
experiment_name: "Kcircular_path_scenario"

#Save directory of results
results_directory: "/home/riot/src/ros2_ws/src/ROSNavBench/results"

#  Add the absolute path of the world
world_path: "/home/riot/src/ros2_ws/src/TFG_Husky_UAL/husky_navigation/worlds/industrial_warehouse.world"

#  Add the absolute path of the map
map_path: "/home/riot/src/ros2_ws/src/TFG_Husky_UAL/husky_navigation/maps/warehouse_slam_toolbox.yaml"

#  Add gazebo model path, if multiple path, please spereate them by a :
models_path: ""
# "/home/riotu/ros2_ws/src/ros2_nav_benchmarking-main/turtlebot3_simulations/turtlebot3_gazebo/models"

#  Choose one of the following controllers, by adding its name to the controller type list
#  Note that these are the avaible controllers for the provided example
#  DWB
#  RPP
#  RPP_RSC
#  DWB_RSC
controller_type: ["RPP","DWB"] #name of behaviour tree

#  This option is intended for testing the same controller several times
#  if the user do not need this test, set it to zero 
trails_num: 1

#  Add the absolute path of the robot navigation configuration
nav_config: "/home/riot/src/ros2_ws/src/ROSNavBench/examples/nav2_config/waffle.yaml"
#"/home/riotu/ros2_ws/src/ros2_nav_benchmarking-main/turtlebot3/turtlebot3_navigation2/param/waffle.yaml"

#  Add the directory of the behaviour tree
behaviour_tree_directory: "/home/riot/src/ros2_ws/src/ROSNavBench/examples/behavior_trees"
#"/home/riotu/ros2_ws/src/ros2_nav_benchmarking-main/turtlebot3/turtlebot3_navigation2/param"

#  Add the absolute path of the urdf and model files inside single qoutes ''
urdf_file: "/home/riot/src/ros2_ws/src/TFG_Husky_UAL/husky_simulation/urdf/husky_ual.urdf.xacro"
#"/home/riotu/ros2_ws/src/ros2_nav_benchmarking-main/turtlebot3/turtlebot3_description/urdf/turtlebot3_waffle.urdf"

#  If the robot is spawned by only urdf, then set the model_file to 'None'
model_file: "None"
# "/home/riotu/ros2_ws/src/ros2_nav_benchmarking-main/turtlebot3_simulations/turtlebot3_gazebo/models/turtlebot3_waffle/model.sdf"

#  Provide the pose in a decimal form
spawn_pose_x: -0.5
spawn_pose_y: 0.0
spawn_pose_yaw: 0.0 #radians
#  Specify either to send one goal, specific trajectory, or several waypoints
#  square, circle, several_waypoints, one_goal
trajectory_type: "circle"
#  Circule parameter, note that the place of spawn will be the center of the circle
radius: 0.5
