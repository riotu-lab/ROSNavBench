#  Name the experiment. This name will be the name of the report
experiment_name: "House_Experiment_1__"


#Save directory of results
results_directory: "/home/YOUR-MACHINE-PATH/ROSNavBench/results"


#  Add the absolute path of the world
world_path: "/home/YOUR-MACHINE-PATH/src/ROSNavBench/simulations/worlds/turtlebot3_house.world-- Note that you need to upload the world form https://github.com/ROBOTIS-GIT/turtlebot3_simulations/blob/master/turtlebot3_gazebo/worlds/turtlebot3_world.world and add the plugins as describe in the documentation"

#  Add the absolute path of the map
map_path: "/home/YOUR-MACHINE-PATH/src/ROSNavBench/simulations/maps/house.yaml"

#  Add the absolute path of the map
map_png_path: "/home/YOUR-MACHINE-PATH/src/ROSNavBench/simulations/maps/house.pgm"

#  Add gazebo model path, if multiple path, please spereate them by a :
models_path: "/opt/ros/humble/share/turtlebot3_gazebo/models"
#  Choose a type of global local planners to be tested
planner_type: ["NavFn", "smac_planner","ThetaStar","Lattice"]
#  Choose one of the following controllers, by adding its name to the controller type list
#  Note that these are the avaible controllers for the provided example
#  DWB
#  RPP
#  RPP_RSC
#  DWB_RSC
controller_type: ["DWB", "RPP","DWB_RSC","RPP_RSC", "MPPI"] #name of behaviour tree

#  This option is intended for testing the same controller and planner combination several times
#  Min value is one
instances_num: 15

#  Add the absolute path of the robot navigation configuration
nav_config: "/home/YOUR-MACHINE-PATH/src/ROSNavBench/example/turtlebot3/nav2_config/waffle_pi2.yaml"

#  Add the directory of the behaviour tree
behaviour_tree_directory: "/home/YOUR-MACHINE-PATH/src/ROSNavBench/example/turtlebot3/behavior_trees"

#  Add the absolute path of the urdf and model files inside single qoutes ''
urdf_file: "/opt/ros/humble/share/turtlebot3_description/urdf/turtlebot3_waffle_pi.urdf"

#  If the robot is spawned by only urdf, then set the model_file to 'None'
model_file: "/opt/ros/humble/share/turtlebot3_gazebo/models/turtlebot3_waffle_pi/model.sdf"
#Citeria for performace analysis includes: "Time" ,"CPU", "Memory", "Path Length" , "Safety"
criteria: ["Time", "path_length", "CPU", "Memory", "Safety"]

#Wieght for each criteria as a number from 1 to 9
#Set None if the wieght to be set automatcally giving that the importance to the eariler criteria in the matrix
weights: "None"

trajectory_type: "user_defined" # Options: "user_defined", "auto_generated"

user_defined_trajectories:
  - type: "single_goal"
    spawn_pose:
      x: 4.97
      y: 1.12
      yaw: 0.0
    # single_goal:
    #   x: 6.44
    #   y: -1.41
    #   theta: 0.0
    single_goal:
      x: -6.5
      y: -2.35
      theta: 0.0

  - type: "waypoints"
    spawn_pose:
      x: 1.13
      y: 3.5
      yaw: 0.0
    waypoints:
      - x: 6.7
        y: 3.7
        theta: 0.0
      - x: 5.0
        y: 0.98
        theta: 0.0
      - x: -1.56
        y: 1.13
        theta: 0.0
      - x: -6.36
        y: 1.63
        theta: 1.57

  - type: "circle"
    circle_center:
      x: -2.7
      y: 2.35
    circle:
      radius: 1.5

  - type: "square"
    spawn_pose:
      x: -4.0
      y: 1.0
      yaw: 0.0
    square:
      side_length: 3.0

auto_generated_trajectory:
  spawn_pose:
    x: 4.0
    y: -3.0
    yaw: -3.13
  types:
    - type: "short_trajectory"
      short_trajectory:
        upper_bound: 7
    - type: "long_trajectory"
      long_trajectory:
        lower_bound: 8
    - type: "waypoints"
      waypoints: 5
